name: Pages Enforce HTTPS
permissions:
  pages: write
  contents: write

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Custom domain to enforce'
        default: 'paninifs.org'
        required: true

jobs:
  enforce:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 1

      - name: Ensure CNAME exists
        run: |
          DOMAIN='${{ inputs.domain }}'
          if [ ! -f CNAME ] || ! grep -qx "$DOMAIN" CNAME; then
            echo "$DOMAIN" > CNAME
            git config user.name 'github-actions'
            git config user.email 'github-actions@github.com'
            git add CNAME
            git commit -m "Ensure CNAME $DOMAIN" || true
            git push origin HEAD:gh-pages || true
          fi

      - name: Enforce HTTPS via API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          owner_repo='${{ github.repository }}'
          domain='${{ inputs.domain }}'
          gh api \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            "/repos/$owner_repo/pages" \
            -f cname="$domain" \
            -f https_enforced=true || true

      - name: Set Pages source to gh-pages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          owner_repo='${{ github.repository }}'
          # Tente update de la source vers gh-pages (branch=gh-pages, path=/)
          echo '{"source": {"branch": "gh-pages", "path": "/"}}' > body.json
          # Essaye PATCH puis POST (certains endpoints varient selon l'Ã©tat du site)
          gh api -X PATCH -H "Accept: application/vnd.github+json" \
            "/repos/$owner_repo/pages" \
            --input body.json || \
          gh api -X POST -H "Accept: application/vnd.github+json" \
            "/repos/$owner_repo/pages" \
            --input body.json || true

      - name: Show Pages settings after update
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api "/repos/${{ github.repository }}/pages" --jq '{cname:.cname,https_enforced:.https_enforced,status:.status,source:.source,build_type:.build_type}' || true

      - name: Verify live
        run: |
          curl -I -L --max-time 20 https://${{ inputs.domain }} || true