name: Validate Agent Provenance Labels (legacy alias)

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, labeled]

permissions:
  contents: read
  pull-requests: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure PR has required provenance labels or is exempted
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels = (pr.labels || []).map(l => String(l.name));
            const REQUIRED_PREFIXES = ['prov:host=','prov:pid=','agent:','model:','owner:'];
            const MAX_LABEL_LEN = 50;
            function ok(m){core.info(m)}; function fail(m){core.setFailed(m)};
            if (labels.includes('copilotage-exempt')) return ok('Bypass enabled.');
            const forbidden = labels.filter(n => /^journal(?::|$)/i.test(n));
            if (forbidden.length) return fail(`Labels interdits: ${forbidden.join(', ')}`);
            const lower = labels.map(n => n.toLowerCase());
            const problems = [];
            for (const p of REQUIRED_PREFIXES) {
              const i = lower.findIndex(n => n.startsWith(p));
              if (i === -1) { problems.push(`Manquant: ${p}`); continue; }
              const label = labels[i];
              if (label.length > MAX_LABEL_LEN) problems.push(`Trop long: ${label}`);
              const val = label.slice(p.length);
              if (!val || !val.trim()) problems.push(`Valeur vide: ${label}`);
            }
            if (problems.length) return fail('Provenance invalide:\n- ' + problems.join('\n- '));
            ok('Validation OK: provenance labels');
